var search_data = {"index":{"searchIndex":["doublelist","exam","examen","interfaz","list","object","respuesta","selsim","verfal","<=>()","deletequestionbeggining!()","each()","each()","getanswers()","getquestion()","head()","includequestionbeggining!()","interface()","new()","new()","new()","new()","new()","new()","new()","pop()","pop()","printexam()","printpregunta()","push()","push()","reverse()","setup()","shift()","tail()","tear_down()","test_failure()","test_simple()","test_type_check()","unshift()","#1#travis.log","gemfile","gemfile.lock","guardfile","license","readme","rakefile","exam.gemspec","travis.log"],"longSearchIndex":["doublelist","exam","examen","interfaz","list","object","respuesta","selsim","verfal","selsim#<=>()","examen#deletequestionbeggining!()","examen#each()","list#each()","selsim#getanswers()","selsim#getquestion()","examen#head()","examen#includequestionbeggining!()","interfaz#interface()","doublelist::new()","examen::new()","interfaz::new()","list::new()","respuesta::new()","selsim::new()","verfal::new()","doublelist#pop()","list#pop()","examen#printexam()","selsim#printpregunta()","doublelist#push()","list#push()","examen#reverse()","doublelist#setup()","doublelist#shift()","examen#tail()","doublelist#tear_down()","doublelist#test_failure()","doublelist#test_simple()","doublelist#test_type_check()","doublelist#unshift()","","","","","","","","",""],"info":[["DoubleList","","DoubleList.html","","<p>*Clase lista doblemente enlazada*\n<p>Contiene el atributo <em>tail</em>, que es el primer elemento por la\nizquierda, …\n"],["Exam","","Exam.html","",""],["Examen","","Examen.html","","<p>*Clase Examen*\n<p>Contiene el atributo <em>pregunta</em>, que contiene una lista doblemente\nenlazada con todas las …\n"],["Interfaz","","Interfaz.html","","<p>*Clase Interfaz*\n<p>Clase que provee al usuario la capacidad de interactuar con el examen.\nPosee el atributo …\n"],["List","","List.html","","<p>*Clase lista*\n<p>Contiene el atributo <em>tail</em>, que es el primer elemento por la\nizquierda, el modulo <em>Enumerable</em> …\n"],["Object","","Object.html","",""],["Respuesta","","Respuesta.html","","<p>*Clase respuesta*\n<p>Contiene el atributo <em>string</em>, en donde se guarda la cadena que\nforma la respuesta, y …\n"],["SelSim","","SelSim.html","","<p>*Clase Pregunta de seleccion simple*\n<p>Contiene el atributo <em>question</em> que se trata del string en donde se\n…\n"],["VerFal","","VerFal.html","","<p>*Clase Pregunta de verdadero o falso*\n<p>Contiene todos los atributos de su clase padre, Seleccion Simple …\n"],["<=>","SelSim","SelSim.html#method-i-3C-3D-3E","(other)",""],["deleteQuestionBeggining!","Examen","Examen.html#method-i-deleteQuestionBeggining-21","()",""],["each","Examen","Examen.html#method-i-each","()",""],["each","List","List.html#method-i-each","()",""],["getanswers","SelSim","SelSim.html#method-i-getanswers","()",""],["getquestion","SelSim","SelSim.html#method-i-getquestion","()",""],["head","Examen","Examen.html#method-i-head","()",""],["includeQuestionBeggining!","Examen","Examen.html#method-i-includeQuestionBeggining-21","(pregunta)",""],["interface","Interfaz","Interfaz.html#method-i-interface","()",""],["new","DoubleList","DoubleList.html#method-c-new","()",""],["new","Examen","Examen.html#method-c-new","()",""],["new","Interfaz","Interfaz.html#method-c-new","(examParam)",""],["new","List","List.html#method-c-new","()",""],["new","Respuesta","Respuesta.html#method-c-new","(string,fidelity)",""],["new","SelSim","SelSim.html#method-c-new","(question,answers)",""],["new","VerFal","VerFal.html#method-c-new","(question,fidelityTrue,fidelityFalse)",""],["pop","DoubleList","DoubleList.html#method-i-pop","()",""],["pop","List","List.html#method-i-pop","()",""],["printexam","Examen","Examen.html#method-i-printexam","()",""],["printpregunta","SelSim","SelSim.html#method-i-printpregunta","()",""],["push","DoubleList","DoubleList.html#method-i-push","(newValue)",""],["push","List","List.html#method-i-push","(newValue)",""],["reverse","Examen","Examen.html#method-i-reverse","()",""],["setup","DoubleList","DoubleList.html#method-i-setup","()",""],["shift","DoubleList","DoubleList.html#method-i-shift","()",""],["tail","Examen","Examen.html#method-i-tail","()",""],["tear_down","DoubleList","DoubleList.html#method-i-tear_down","()",""],["test_failure","DoubleList","DoubleList.html#method-i-test_failure","()",""],["test_simple","DoubleList","DoubleList.html#method-i-test_simple","()",""],["test_type_check","DoubleList","DoubleList.html#method-i-test_type_check","()",""],["unshift","DoubleList","DoubleList.html#method-i-unshift","(newValue)",""],["#1#travis.log","","#1#travis_log.html","","<p>Command line: “travis”\n\n<pre>  ________                                 __\n /        |            ...</pre>\n"],["Gemfile","","Gemfile.html","","<p>source ‘rubygems.org’\n<p># Specify your gem’s dependencies in exam.gemspec gemspec gem ‘guard’ gem\n‘guard-rspec’ …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>PATH\n\n<pre>remote: .\nspecs:\n  exam (0.0.1)</pre>\n<p>GEM\n"],["Guardfile","","Guardfile.html","","<p>guard ‘bundler’ do\n\n<pre>watch('Gemfile')\nwatch(/^.+\\.gemspec/)</pre>\n<p>end\n"],["LICENSE","","LICENSE_txt.html","","<p>Copyright © 2014 Eduardo Brito Sanchez\n<p>MIT License\n<p>Permission is hereby granted, free of charge, to any …\n"],["README","","README_md.html","","<p>Exam\n<p>TODO: Write a gem description\n<p>Installation\n"],["Rakefile","","Rakefile.html","","<p>$:.unshift File.dirname(__FILE__) + ‘lib’ require “bundler/gem_tasks”\n<p>require ‘rspec/core/rake_task’ …\n"],["exam.gemspec","","exam_gemspec.html","","<p>lib = File.expand_path(‘../lib’, __FILE__) $LOAD_PATH.unshift(lib) unless\n$LOAD_PATH.include?(lib) require …\n"],["travis.log","","travis_log.html","","<p>Command line: “travis login –auto”\n\n<pre>  ________                                 __\n /        ...</pre>\n"]]}}